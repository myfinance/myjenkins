{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.serviceAccount.name }}
  namespace: default
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: {{ .Values.serviceAccount.name }}
  namespace: default
rules:
- apiGroups: [""]
  resources: ["pods","services"]
  verbs: ["create","delete","get","list","patch","update","watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["create","delete","get","list","patch","update","watch"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create","delete","get","list","patch","update","watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get","list","watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["create","delete","get","list","patch","update","watch"]
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["create","delete","get","list","patch","update","watch"]  
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["create","delete","get","list","patch","update","watch"]   
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["create","delete","get","list","patch","update","watch"]     
- apiGroups: ["batch"]
  resources: ["cronjobs"]
  verbs: ["create","delete","get","list","patch","update","watch"]      
- apiGroups: ["monitoring.coreos.com"]
  resources: ["prometheuses", "prometheusrules","alertmanagers","servicemonitors"]
  verbs: ["create","delete","get","list","patch","update","watch"]           

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: {{ .Values.serviceAccount.name }}
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Values.serviceAccount.name }}
subjects:
- kind: ServiceAccount
  name: {{ .Values.serviceAccount.name }}
---
# Allows jenkins to create persistent volumes
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Values.serviceAccount.clusterrolebinding }}
subjects:
- kind: ServiceAccount
  namespace: default
  name: {{ .Values.serviceAccount.name }}
roleRef:
  kind: ClusterRole
  name: {{ .Values.serviceAccount.clusterrole }}
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: {{ .Values.serviceAccount.clusterrole }}
rules:
- apiGroups:
  - ""
  - extensions
  - apps
  - rbac.authorization.k8s.io
  - roles.rbac.authorization.k8s.io
  - authorization.k8s.io
  - apiextensions.k8s.io
  - policy
  - admissionregistration.k8s.io
  resources: ["*"]
  verbs: ["*"]

{{- end -}}  